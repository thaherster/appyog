{"version":3,"sources":["components/Navbar.js","actions/actions.js","components/Block.js","actions/types.js","components/Content.js","components/Button.js","reducers/reducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","class","role","aria-label","href","aria-expanded","aria-hidden","Component","validate","newI","map","i","length","text","array","split","key","j","undefined","isDuplicate","Block","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","onChange","bind","assertThisInitialized","onClick","e","setState","defineProperty","target","name","value","console","log","preventDefault","props","id","newproducts","items","products","updateProduct","nextProps","className","classnames","is-info","is-primary","type","placeholder","propType","PropTypes","func","isRequired","object","connect","dispatch","payload","Content","components_Block","Button","addProduct","initialState","combineReducers","arguments","action","objectSpread","concat","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_Navbar","components_Content","components_Button","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d96f55a1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div class=\"navbar-brand\">\n          <a class=\"navbar-item\" href=\"/\">\n            Dupli\n          </a>\n\n          <a\n            role=\"button\"\n            class=\"navbar-burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n          >\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n          </a>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default Navbar;\n","import { ADD_PRODUCT, UPDATE_PRODUCT } from \"./types\";\n\n//add New Product\nexport const addProduct = () => dispatch => {\n  dispatch({\n    type: ADD_PRODUCT,\n    payload: {}\n  });\n};\n\n//Update old Product\nexport const updateProduct = newI => dispatch => {\n  console.log(\"FINAL LIST\");\n  console.log(newI);\n  dispatch({\n    type: UPDATE_PRODUCT,\n    payload: validate(newI)\n  });\n};\n\nconst validate = newI => {\n  var lat = [];\n  var map = {};\n\n  for (var i = 0; i < newI.length; i++) {\n    if (newI[i].text === \"\") {\n      continue;\n    }\n    var array = newI[i].text.split(\",\");\n    let key = \"\";\n    for (var j = 0; j < array.length; j++) {\n      key = key + \"_\" + array[j];\n    }\n    if (map[key] === undefined) {\n      map[key] = 0;\n    } else {\n      map[key] = map[key]++;\n      newI[i] = { text: newI[i].text, isDuplicate: true };\n    }\n  }\n  return newI;\n};\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { updateProduct } from \"../actions/actions\";\n\nclass Block extends Component {\n  constructor() {\n    super();\n    this.state = {\n      text: \"\",\n      isDuplicate: false\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onClick(e) {\n    console.log(\"UPDATE CLICKED\");\n    e.preventDefault();\n    console.log(this.state.text);\n    console.log(this.props.id);\n    let newproducts = this.props.items.products;\n\n    newproducts[this.props.id] = {\n      text: this.state.text,\n      isDuplicate: false\n    };\n    this.props.updateProduct(newproducts);\n  }\n\n  componentDidMount() {\n    this.setState({\n      text: this.props.value.text,\n      isDuplicate: this.props.value.isDuplicate\n    });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      text: nextProps.value.text,\n      isDuplicate: nextProps.value.isDuplicate\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"column is-one-quarter\">\n        <article\n          class={classnames(\"media notification\", {\n            \"is-info\": !this.state.isDuplicate,\n            \"is-primary\": this.state.isDuplicate\n          })}\n        >\n          <div class=\"media-content\">\n            <div class=\"content\">\n              <p class=\"is-size-5\">\n                <input\n                  class=\"input\"\n                  type=\"text\"\n                  name=\"text\"\n                  placeholder=\"Ball,1,2,2,1,ball\"\n                  value={this.state.text}\n                  onChange={this.onChange}\n                />\n              </p>\n              <button onClick={this.onClick} className=\"button is-danger\">\n                update\n              </button>\n            </div>\n          </div>\n        </article>\n      </div>\n    );\n  }\n}\n\nBlock.propType = {\n  updateProduct: PropTypes.func.isRequired,\n  items: PropTypes.object.isRequired\n};\n\nconst mapStatetoProps = state => ({\n  items: state.items\n});\n\nexport default connect(\n  mapStatetoProps,\n  { updateProduct }\n)(Block);\n","export const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\n","import React, { Component } from \"react\";\nimport Block from \"./Block\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nclass Content extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      products: this.props.items.products\n    });\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.items) {\n      this.setState({ products: nextProps.items.products });\n    }\n  }\n  render() {\n    const { items } = this.props;\n    console.log(\"this.props\");\n    console.log(this.props);\n    return (\n      <section class=\"section\">\n        <div class=\"container\">\n          <div className=\"columns is-multiline\">\n            {this.state.products.map(function(value, i) {\n              return <Block value={value} key={i} id={i} />;\n            })}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nContent.propTypes = {\n  items: PropTypes.object.isRequired\n};\nconst mapStatetoProps = state => ({\n  items: state.items\n});\nexport default connect(\n  mapStatetoProps,\n  {}\n)(Content);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addProduct } from \"../actions/actions\";\n\nclass Button extends Component {\n  constructor() {\n    super();\n    this.onClick = this.onClick.bind(this);\n  }\n  onClick(e) {\n    e.preventDefault();\n    console.log(\"ADD CLICKED\");\n    this.props.addProduct();\n  }\n  render() {\n    return (\n      <div className=\"hero-foot\">\n        <nav className=\"tabs\">\n          <div className=\"container\">\n            <ul>\n              <li>\n                <button\n                  class=\"sticky button is-rounded is-primary\"\n                  onClick={this.onClick}\n                >\n                  <span class=\"icon is-small\">\n                    <i class=\"fas fa-plus\" />\n                  </span>\n                </button>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nButton.propType = {\n  addProduct: PropTypes.func.isRequired,\n  items: PropTypes.object.isRequired\n};\n\nconst mapStatetoProps = state => ({\n  items: state.items\n});\n\nexport default connect(\n  mapStatetoProps,\n  { addProduct }\n)(Button);\n","import { ADD_PRODUCT, UPDATE_PRODUCT } from \"../actions/types\";\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        products: [...state.products, { text: \"\", isDuplicate: false }]\n      };\n\n    case UPDATE_PRODUCT:\n      console.log(action.payload);\n      return {\n        ...state,\n        products: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","//root reducer\nimport { combineReducers } from \"redux\";\nimport reducer from \"./reducer\";\n\nexport default combineReducers({\n  items: reducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\"; //since we called out root reducer index.js\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/Navbar\";\nimport Content from \"./components/Content\";\nimport Button from \"./components/Button\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"hero is-fullheight\">\n          <Navbar />\n          <Content />\n          <Button />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}